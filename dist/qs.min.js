/*
qs v.0.3.5 - Simple query strings parser
13-02-2015
*/
function QS(a){function b(a){return null!==a?isNaN(a)?a.match(/^true|false$/)?Boolean(a):"undefined"===a?void 0:"null"===a?null:a:Number(a):void 0}function c(){var a=d.url.substr(0,d.url.indexOf("?")>0&&d.url.indexOf("?")||d.url.length),b=[];for(var c in d.tokens)d.tokens.hasOwnProperty(c)&&b.push(c+(d.tokens[c]?"="+d.tokens[c]:""));b.length>0&&(a+="?"+b.join("&")),d.url=a}var d={url:decodeURIComponent(a||window&&window.location.href),tokens:{},has:function(a){return d.tokens.hasOwnProperty(a)},get:function(a){return d.tokens[a]},getAll:function(){return d.tokens},set:function(a,b){return d.tokens[a]=b,c(),d},remove:function(a){return delete d.tokens[a],c(),d},go:function(){document.location.href=encodeURIComponent(d.url)},log:function(){console.log(d.tokens)}};return function(){var a,c=/[?&]([\w-~\._]+)(?:=([\w-~\._]+))?/g;for(a=c.exec(d.url);null!==a;)d.tokens[a[1]]=b(a[2]||null),a=c.exec(d.url)}(),d}